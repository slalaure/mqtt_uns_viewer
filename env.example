# --- General MQTT Broker Configuration ---
# The full URL of your broker.
# Examples:
# For standard MQTTS: mqtts://your-broker-domain.com:8883
# For AWS IoT Core:   mqtts://your-endpoint.iot.aws-region.amazonaws.com
MQTT_BROKER_HOST=mqtts://your-endpoint.iot.aws-region.amazonaws.com
MQTT_PORT=8883
MQTT_PROTOCOL=mqtts # Use 'mqtt' or 'mqtts'

# A unique client ID for the MQTT connection
CLIENT_ID=my-web-visualizer-app

# The MQTT topic(s) to subscribe to.
# For multiple topics, separate them with a comma.
# Example: "stark_industries/#,another/topic/tree/#,specific/device/status"
MQTT_TOPIC="stark_industries/#,spBv1.0/stark_industries/#"


# --- Authentication Method 1: Username & Password (for standard brokers) ---
# Leave these empty if using certificates
MQTT_USERNAME=
MQTT_PASSWORD=


# --- Authentication Method 2: Certificates (for AWS IoT or other MTLS brokers) ---
# Certificate Filenames (these files must be placed in the /certs folder)
# Leave these empty if using username/password
CERT_FILENAME=certificate.pem.crt
KEY_FILENAME=private.pem.key
CA_FILENAME=AmazonRootCA1.pem


# --- Advanced TLS/ALPN Configuration ---
# Specify the ALPN protocol.
# For AWS IoT on port 443, use 'x-amzn-mqtt-ca'.
# Leave empty for most other brokers.
MQTT_ALPN_PROTOCOL=x-amzn-mqtt-ca


# --- Application & Simulator ---
SIMULATOR_ENABLED=true
PORT=8080

# --- Sparkplug B Support ---
# Set to 'true' to enable decoding of Sparkplug B Protobuf payloads.
# The topic must start with 'spBv1.0/' for decoding to be attempted.
SPARKPLUG_ENABLED=false

# --- Database Configuration ---
# Maximum database size in Megabytes.
# If exceeded, the oldest data will be pruned.
# Leave empty or comment out to disable the limit.
DUCKDB_MAX_SIZE_MB=100

# Number of old messages to delete when the size limit is reached.
# Note: The user requested "by steps of 50", this is interpreted as deleting a chunk of records.
# A larger chunk is more efficient. 500 is a reasonable default.
DUCKDB_PRUNE_CHUNK_SIZE=500